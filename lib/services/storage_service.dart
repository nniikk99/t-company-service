import 'dart:convert';
import 'package:shared_preferences/shared_preferences.dart';
import '../models/user.dart';
import '../models/equipment.dart';

class StorageService {
  static const String _usersKey = 'users_data';
  static const String _currentUserKey = 'current_user_inn';

  // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  static Future<void> saveUsers(Map<String, User> users) async {
    final prefs = await SharedPreferences.getInstance();
    final usersJson = <String, dynamic>{};
    
    users.forEach((inn, user) {
      usersJson[inn] = {
        'inn': user.inn,
        'companyName': user.companyName,
        'password': user.password,
        'equipment': user.equipment.map((eq) => eq.toJson()).toList(),
      };
    });
    
    await prefs.setString(_usersKey, jsonEncode(usersJson));
    print('üíæ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
  }

  // –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  static Future<Map<String, User>> loadUsers() async {
    final prefs = await SharedPreferences.getInstance();
    final usersString = prefs.getString(_usersKey);
    
    if (usersString == null) {
      print('üìÇ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      return _createDefaultUsers();
    }

    try {
      final usersJson = jsonDecode(usersString) as Map<String, dynamic>;
      final users = <String, User>{};
      
      usersJson.forEach((inn, userData) {
        final equipmentList = (userData['equipment'] as List<dynamic>)
            .map((eq) => Equipment.fromJson(eq as Map<String, dynamic>))
            .toList();
            
        users[inn] = User(
          inn: userData['inn'],
          companyName: userData['companyName'],
          password: userData['password'],
          equipment: equipmentList,
        );
      });
      
      print('üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
      return users;
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: $e');
      return _createDefaultUsers();
    }
  }

  // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  static Future<void> saveCurrentUser(String inn) async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.setString(_currentUserKey, inn);
  }

  // –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  static Future<String?> loadCurrentUser() async {
    final prefs = await SharedPreferences.getInstance();
    return prefs.getString(_currentUserKey);
  }

  // –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤—ã—Ö–æ–¥)
  static Future<void> clearCurrentUser() async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.remove(_currentUserKey);
  }

  // –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  static Map<String, User> _createDefaultUsers() {
    return {
      '1234567890': User(
        inn: '1234567890',
        companyName: 'T-company',
        password: 'test123',
        equipment: <Equipment>[],
      ),
      '9876543210': User(
        inn: '9876543210',
        companyName: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è',
        password: 'demo123',
        equipment: <Equipment>[],
      ),
    };
  }

  // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  static Future<void> saveUser(User user, Map<String, User> allUsers) async {
    allUsers[user.inn] = user;
    await saveUsers(allUsers);
  }

  // –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
  static Future<void> clearAllData() async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.clear();
    print('üóëÔ∏è –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');
  }

  // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ–≤—Ö–æ–¥–∞ (–∑–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è)
  static Future<void> saveRememberMe(String inn, String password) async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.setString('remember_inn', inn);
    await prefs.setString('remember_password', password);
    await prefs.setBool('remember_me', true);
    print('üíæ –î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ–≤—Ö–æ–¥–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
  }

  // –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ–≤—Ö–æ–¥–∞
  static Future<Map<String, String>?> loadRememberMe() async {
    final prefs = await SharedPreferences.getInstance();
    final rememberMe = prefs.getBool('remember_me') ?? false;
    
    if (!rememberMe) return null;
    
    final inn = prefs.getString('remember_inn');
    final password = prefs.getString('remember_password');
    
    if (inn != null && password != null) {
      return {'inn': inn, 'password': password};
    }
    
    return null;
  }

  // –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–≤—Ö–æ–¥–∞
  static Future<void> clearRememberMe() async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.remove('remember_inn');
    await prefs.remove('remember_password');
    await prefs.setBool('remember_me', false);
    print('üóëÔ∏è –î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–≤—Ö–æ–¥–∞ –æ—á–∏—â–µ–Ω—ã');
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –≤–∫–ª—é—á–µ–Ω –ª–∏ –∞–≤—Ç–æ–≤—Ö–æ–¥
  static Future<bool> isRememberMeEnabled() async {
    final prefs = await SharedPreferences.getInstance();
    return prefs.getBool('remember_me') ?? false;
  }
} 